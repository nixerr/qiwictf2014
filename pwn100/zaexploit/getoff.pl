#!/usr/bin/perl

use strict;

open FILE, "<elf.txt";
my %offsets;
while (<FILE>) {
	chomp;
	my $str = $_;
	$str =~ m/.+?\[(\d\d\d)\].+?\soffset\s=\s0x(.+)$/;
	$offsets{$1} = $2;
}
close FILE;


my %addrs;
open FILE, "<1.txt";
while (<FILE>) {
	chomp;
	my $str = $_;
	$str =~ m/^(\d+)\s=>\s(.+)$/;
	$addrs{$1} = $2;
}

my %bases;
for my $i (keys %offsets) {
	my $addr = hex($addrs{$i}) & 0xfffff000;
	my $offs = hex($offsets{$i});

	my $base = $addr - $offs;

	$bases{$i} = sprintf("%08X", $base);
#	print "$i => " . sprintf("0x%08X", $base)."\n";
}

my $binary = $bases{'742'};
for my $i (sort keys %bases) {
	if ($binary eq $bases{$i}) {
		my $true_offset = hex($addrs{$i}) - hex($bases{$i});
		print "$i => 0x" . sprintf("%08X", $true_offset) . "\n";;
	}
}
